/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.FosterCareHead;

import Business.ChildMaltreatment.ChildMaltreatmentAttributes;
import Business.Enterprises.Enterprise;
import Business.Entity;
import Business.Enums.Status;
import Business.FosterCare.FosterCareAttributes;
import Business.Organizations.Organization;
import Business.Role.Role;
import Business.Users.User;
import Business.WorkQueue.WorkRequest;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ChildWelfareServicesTeam
 */
public class FosterCareHeadWorkArea extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Entity entity;
    private Enterprise enterprise;
    private User user;
    private Organization organization;

    /**
     * Creates new form FosterCareHeadWorkArea
     */
    public FosterCareHeadWorkArea(JPanel userProcessContainer, Entity entity, Organization organization, Enterprise enterprise,
            User user) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.entity = entity;
        this.organization = organization;
        this.enterprise = enterprise;
        this.user = user;
        populateFostercareHeadRequests();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane4 = new javax.swing.JScrollPane();
        tblChildDetails = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblFosterCareHeadWorkRequest = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblGuardianDetails = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        btnRequestMoreDetails = new javax.swing.JButton();
        btnAssignToChildWelfareOfficer = new javax.swing.JButton();

        setBackground(new java.awt.Color(172, 208, 192));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblChildDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Gender", "Age", "Ethnicity", "Race", "Location", "Expected Duration", "Open To Adoption"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tblChildDetails);
        if (tblChildDetails.getColumnModel().getColumnCount() > 0) {
            tblChildDetails.getColumnModel().getColumn(4).setHeaderValue("Race");
            tblChildDetails.getColumnModel().getColumn(5).setHeaderValue("Location");
            tblChildDetails.getColumnModel().getColumn(6).setHeaderValue("Expected Duration");
            tblChildDetails.getColumnModel().getColumn(7).setHeaderValue("Open To Adoption");
        }

        add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, 747, 42));

        tblFosterCareHeadWorkRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Request Date", "Status", "Remarks", "Preferred Agency Location"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(tblFosterCareHeadWorkRequest);

        add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 747, 91));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Child Details:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, 110, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Work Requests: ");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 120, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Guardian Details:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 380, 140, 21));

        tblGuardianDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Name", "Location", "Mobile Number", "Email Address"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(tblGuardianDetails);

        add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 420, 747, 50));

        jLabel4.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(240, 240, 240));
        jLabel4.setText("Foster Care Head Work Area");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 30, 370, -1));

        btnRequestMoreDetails.setBackground(new java.awt.Color(217, 180, 74));
        btnRequestMoreDetails.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        btnRequestMoreDetails.setForeground(new java.awt.Color(255, 255, 255));
        btnRequestMoreDetails.setText("Request More Details");
        btnRequestMoreDetails.setContentAreaFilled(false);
        btnRequestMoreDetails.setOpaque(true);
        btnRequestMoreDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRequestMoreDetailsActionPerformed(evt);
            }
        });
        add(btnRequestMoreDetails, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 520, 220, 50));

        btnAssignToChildWelfareOfficer.setBackground(new java.awt.Color(217, 180, 74));
        btnAssignToChildWelfareOfficer.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        btnAssignToChildWelfareOfficer.setForeground(new java.awt.Color(255, 255, 255));
        btnAssignToChildWelfareOfficer.setText("Assign to Child Welfare Officer");
        btnAssignToChildWelfareOfficer.setContentAreaFilled(false);
        btnAssignToChildWelfareOfficer.setOpaque(true);
        btnAssignToChildWelfareOfficer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignToChildWelfareOfficerActionPerformed(evt);
            }
        });
        add(btnAssignToChildWelfareOfficer, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 520, 240, 50));
    }// </editor-fold>//GEN-END:initComponents

    private void btnRequestMoreDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRequestMoreDetailsActionPerformed

    }//GEN-LAST:event_btnRequestMoreDetailsActionPerformed

    private void btnAssignToChildWelfareOfficerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignToChildWelfareOfficerActionPerformed
        ChildMaltreatmentAttributes cma = (ChildMaltreatmentAttributes) tblFosterCareHeadWorkRequest.getValueAt(tblFosterCareHeadWorkRequest.getSelectedRow(), 0);

        for (User user : entity.getUserDirectory().getUserList()) {
            if (user.getRole().getRoleType() == Role.RoleType.ChildWelfareAdmin) {
                cma.setReceiver(user);
                break;
            }
        }
        JOptionPane.showMessageDialog(null, "Assigned To ChildWelfare Admin", "Success", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnAssignToChildWelfareOfficerActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssignToChildWelfareOfficer;
    private javax.swing.JButton btnRequestMoreDetails;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable tblChildDetails;
    private javax.swing.JTable tblFosterCareHeadWorkRequest;
    private javax.swing.JTable tblGuardianDetails;
    // End of variables declaration//GEN-END:variables

    private void populateFostercareHeadRequests() {
        DefaultTableModel delModel = (DefaultTableModel) tblFosterCareHeadWorkRequest.getModel();
        delModel.setRowCount(0);
        ArrayList<WorkRequest> workRequestList = organization.getWorkQueue().getWorkRequestList();
        for (WorkRequest workRequest : workRequestList) {
            if (workRequest.getStatus().equalsIgnoreCase(Status.StatusType.NEW.getValue())
                    || workRequest.getStatus().equalsIgnoreCase(Status.StatusType.INPROGRESS.getValue())) {

                FosterCareAttributes cha = (FosterCareAttributes) workRequest;
                Object[] row = new Object[6];
                row[0] = cha;
                row[1] = cha.getRequestDate();
                row[2] = cha.getStatus();
                row[3] = cha.getRemarks();
                row[4] = cha.getPreferredAgencyLocation();
                delModel.addRow(row);
            }
        }

        tblFosterCareHeadWorkRequest.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent event) {
                populateDetailsTable();
            }
        });
    }

    private void populateDetailsTable() {
        populateChildTable();
        populateGuardianTable();
    }

    private void populateChildTable() {
        try {
            FosterCareAttributes cha = (FosterCareAttributes) tblFosterCareHeadWorkRequest.getValueAt(tblFosterCareHeadWorkRequest.getSelectedRow(), 0);
            DefaultTableModel model = (DefaultTableModel) tblChildDetails.getModel();
            model.setRowCount(0);
            Object[] row = new Object[8];
            row[0] = cha.getChildFullName();
            row[1] = cha.getChildGender();
            row[2] = cha.getChildAge();
            row[3] = cha.getEthnicity();
            row[4] = cha.getRace();
            row[5] = cha.getChildLocation();
            row[6] = cha.getTemporaryStayExpectedDays();

            if (cha.isOpenToAdoption()) {
                row[7] = "Yes";
            } else {
                row[7] = "No";
            }

            model.addRow(row);

        } catch (Exception e) {
            return;
        }
    }

    private void populateGuardianTable() {
        try {
            FosterCareAttributes cha = (FosterCareAttributes) tblFosterCareHeadWorkRequest.getValueAt(tblFosterCareHeadWorkRequest.getSelectedRow(), 0);
            DefaultTableModel model = (DefaultTableModel) tblGuardianDetails.getModel();
            model.setRowCount(0);
            Object[] row = new Object[4];
            row[0] = cha.getLegalGuardianName();
            row[1] = cha.getLegalGuardianLocation();
            row[2] = cha.getLegalGuardianMobile();
            row[3] = cha.getLegalGuardianEmail();

            model.addRow(row);

        } catch (Exception e) {
            return;
        }
    }
}
